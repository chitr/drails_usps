(Called drails_usps because the Drupal and Rails projects described below live in different git repositories on my local machine and I wanted to leave them together on github.)

While the USPS API allows creation of labels, it does not allow automated payment and creation of postage. Alternatively, one can use the USPS online Click-N-Ship site to create and print a label with postage, then simply drop them off at the Post Office (without waiting in line!) or scheduling a pick up (in certain areas). To ease the tedium of copying and pasting all the shipping information from an Ubercart 2.x order into the Click-N-Ship site, this Drupal module prefills the information by sending it as URL parameters.

It collects order information using hook_order(), stores the data and makes it available to Javascript that generates a button the user clicks to send the data to prefill the USPS Click-N-Ship form from url parameters. Initially, I wanted to send the data to a Rails app (so I could do other things with it there, rather than in Drupal) and have Mechanize login to Click-N-Ship, enter the information and redirect the user to a prefilled page (to only review, pay for, then print the postage). In the command line, Mechanize is doing the right thing in the background and the mechanize_agent.current_page() method returns the right url and cookie. However, I couldn't figure out how to use the cookie to get to the pre-filled page in the browser as a redirect_to from a Rails controller action (Dummies#login).

After sleeping on the problem and beginning to write this, I thought about using HTTParty or similar in Rails to more easily generate the request with the cookie from Mechanize. It's getting there but the rest will have to wait. After that, rewire the Drupal module to post the data to Rails and add the additional fields to the Dummy model (and change the name!).
